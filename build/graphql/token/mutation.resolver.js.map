{"version":3,"sources":["../../../src/graphql/token/mutation.resolver.js"],"names":["Mutation","removeToken","_","args","_id","TokenModal","findOne","tokenDb","deleteOne","message","result","error","addToken","name","address","slug","base","length","substr","newToken","save","updateToken","rest","set","updated"],"mappings":"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","sourcesContent":["import { TokenModal } from '../../utils/db'\r\nexport default {\r\n    Mutation: {\r\n        removeToken: async (_, args) => {\r\n            const { _id } = args\r\n\r\n            try {\r\n                const tokenDb = await TokenModal.findOne({ _id })\r\n                if (tokenDb !== null) {\r\n                    await TokenModal.deleteOne({ _id })\r\n                    return { message: `Token removed`, result: tokenDb }\r\n                }\r\n                return { error: `Error on token remove.` }\r\n            } catch (e) {\r\n                return { error: `Error on token remove.` }\r\n            }\r\n        },\r\n        addToken: async (_, args) => {\r\n            const { name, address, slug, base } = args\r\n\r\n            if (address.length !== 42 || address.substr(0, 2) !== '0x') {\r\n                return { error: `Address wrong.` }\r\n            }\r\n            try {\r\n                const newToken = new TokenModal({ name, address, slug, base })\r\n                newToken.save()\r\n                return { message: `Token added`, result: newToken }\r\n            } catch (e) {\r\n                return { error: `Error on token add.` }\r\n            }\r\n        },\r\n        updateToken: async (_, args) => {\r\n            const { _id, ...rest } = args\r\n\r\n            if (\r\n                rest.address &&\r\n                (rest.address.length !== 42 ||\r\n                    rest.address.substr(0, 2) !== '0x')\r\n            ) {\r\n                return { message: `Address wrong.` }\r\n            }\r\n\r\n            try {\r\n                const tokenDb = await TokenModal.findOne({ _id })\r\n                tokenDb.set({ ...rest })\r\n                const updated = await tokenDb.save()\r\n                return { message: `Token updated.`, result: updated }\r\n            } catch (e) {\r\n                return { error: `Error on token update.` }\r\n            }\r\n        },\r\n    },\r\n}\r\n"],"file":"mutation.resolver.js"}