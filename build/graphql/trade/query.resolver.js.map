{"version":3,"sources":["../../../src/graphql/trade/query.resolver.js"],"names":["Query","getTrades","_","args","ctx","token","TradeModal","find","sort","updatedAt","trades","Promise","all","map","trade","TokenModal","findOne","_id","tokenId","result","error"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;eAEe;AACXA,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS;AAAA,qGAAE,kBAAOC,CAAP,EAAUC,IAAV,EAAgBC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,gBAAAA,KADD,GACWF,IADX,CACCE,KADD;AAAA;AAAA;AAAA,uBAIkBC,eAAWC,IAAX,GAAkBC,IAAlB,CAAuB;AAAEC,kBAAAA,SAAS,EAAE,CAAC;AAAd,iBAAvB,CAJlB;;AAAA;AAIGC,gBAAAA,MAJH;;AAAA,sBAMCL,KAAK,KAAK,CANX;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAOOM,OAAO,CAACC,GAAR,CACFF,MAAM,CAACG,GAAP;AAAA,2GAAW,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACaC,eAAWC,OAAX,CAAmB;AACnCC,8BAAAA,GAAG,EAAEH,KAAK,CAACI;AADwB,6BAAnB,CADb;;AAAA;AACDb,4BAAAA,KADC;AAIPS,4BAAAA,KAAK,CAACT,KAAN,GAAcA,KAAd;AAJO,6DAKAS,KALA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAX;;AAAA;AAAA;AAAA;AAAA,oBADE,CAPP;;AAAA;AAAA,kDAkBI;AAAEK,kBAAAA,MAAM,EAAET;AAAV,iBAlBJ;;AAAA;AAAA;AAAA;AAAA,kDAoBI;AAAEU,kBAAAA,KAAK;AAAP,iBApBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADN;AADI,C","sourcesContent":["import { TradeModal, TokenModal } from '../../utils/db'\r\nimport { getTokenPriceAndBalance } from '../../utils/helpers'\r\n\r\nexport default {\r\n    Query: {\r\n        getTrades: async (_, args, ctx) => {\r\n            const { token } = args\r\n\r\n            try {\r\n                const trades = await TradeModal.find().sort({ updatedAt: -1 })\r\n\r\n                if (token === 1) {\r\n                    await Promise.all(\r\n                        trades.map(async (trade) => {\r\n                            const token = await TokenModal.findOne({\r\n                                _id: trade.tokenId,\r\n                            })\r\n                            trade.token = token\r\n                            return trade\r\n                        })\r\n                    )\r\n                }\r\n\r\n                return { result: trades }\r\n            } catch (e) {\r\n                return { error: `No trades found.` }\r\n            }\r\n        },\r\n    },\r\n}\r\n"],"file":"query.resolver.js"}