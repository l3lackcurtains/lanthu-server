{"version":3,"sources":["../../../src/graphql/token-info/query.resolver.js"],"names":["Query","getTokenInfo","_","args","ctx","tokenId","TokenModal","findOne","_id","token","balance","price","bnbBalance","bnbPrice","busdBalance","data","name","address","result","message","error"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;eAEe;AACXA,EAAAA,KAAK,EAAE;AACHC,IAAAA,YAAY;AAAA,wGAAE,iBAAOC,CAAP,EAAUC,IAAV,EAAgBC,GAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACFC,gBAAAA,OADE,GACUF,IADV,CACFE,OADE;AAAA;AAAA;AAAA,uBAIcC,eAAWC,OAAX,CAAmB;AAAEC,kBAAAA,GAAG,EAAEH;AAAP,iBAAnB,CAJd;;AAAA;AAIAI,gBAAAA,KAJA;;AAAA,sBAMFA,KAAK,KAAK,IANR;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAaQ,sCAAwBA,KAAxB,CAbR;;AAAA;AAAA;AAQEC,gBAAAA,OARF,yBAQEA,OARF;AASEC,gBAAAA,KATF,yBASEA,KATF;AAUEC,gBAAAA,UAVF,yBAUEA,UAVF;AAWEC,gBAAAA,QAXF,yBAWEA,QAXF;AAYEC,gBAAAA,WAZF,yBAYEA,WAZF;AAeIC,gBAAAA,IAfJ,GAeW;AACTN,kBAAAA,KAAK,EAAEA,KAAK,CAACO,IADJ;AAETC,kBAAAA,OAAO,EAAER,KAAK,CAACQ,OAFN;AAGTP,kBAAAA,OAAO,EAAPA,OAHS;AAITE,kBAAAA,UAAU,EAAVA,UAJS;AAKTE,kBAAAA,WAAW,EAAXA,WALS;AAMTH,kBAAAA,KAAK,EAALA,KANS;AAOTE,kBAAAA,QAAQ,EAARA;AAPS,iBAfX;AAAA,iDAyBK;AAAEK,kBAAAA,MAAM,EAAEH;AAAV,iBAzBL;;AAAA;AAAA,iDA2BK;AAAEI,kBAAAA,OAAO,EAAE;AAAX,iBA3BL;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,iDA8BC;AAAEC,kBAAAA,KAAK;AAAP,iBA9BD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADT;AADI,C","sourcesContent":["import { getTokenPriceAndBalance } from '../../utils/helpers'\r\nimport { TokenModal } from '../../utils/db'\r\n\r\nexport default {\r\n    Query: {\r\n        getTokenInfo: async (_, args, ctx) => {\r\n            const { tokenId } = args\r\n\r\n            try {\r\n                const token = await TokenModal.findOne({ _id: tokenId })\r\n\r\n                if (token !== null) {\r\n                    const {\r\n                        balance,\r\n                        price,\r\n                        bnbBalance,\r\n                        bnbPrice,\r\n                        busdBalance,\r\n                    } = await getTokenPriceAndBalance(token)\r\n\r\n                    const data = {\r\n                        token: token.name,\r\n                        address: token.address,\r\n                        balance,\r\n                        bnbBalance,\r\n                        busdBalance,\r\n                        price,\r\n                        bnbPrice,\r\n                    }\r\n\r\n                    return { result: data }\r\n                } else {\r\n                    return { message: 'No token found.' }\r\n                }\r\n            } catch (e) {\r\n                return { error: `Error on token fetch.` }\r\n            }\r\n        },\r\n    },\r\n}\r\n"],"file":"query.resolver.js"}