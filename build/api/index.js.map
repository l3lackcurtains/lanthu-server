{"version":3,"sources":["../../src/api/index.js"],"names":["require","config","express","DeviceModal","router","Router","post","req","res","token","body","findOne","deviceInDB","newDevice","save","json","success","message","get","params","device","module","exports"],"mappings":";;;;;;;;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,IAAMC,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AAEA,eAAwBA,OAAO,CAAC,aAAD,CAA/B;AAAA,IAAQG,WAAR,YAAQA,WAAR;;AAEA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAEAD,MAAM,CAACE,IAAP,CAAY,UAAZ;AAAA,2FAAwB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,KADc,GACNF,GAAG,CAACG,IAAJ,CAASD,KADH;AAAA;AAAA;AAAA,mBAGSN,WAAW,CAACQ,OAAZ,CAAoB;AAAEF,cAAAA,KAAK,EAALA;AAAF,aAApB,CAHT;;AAAA;AAGVG,YAAAA,UAHU;;AAIhB,gBAAIA,UAAU,KAAK,IAAnB,EAAyB;AACfC,cAAAA,SADe,GACH,IAAIV,WAAJ,CAAgB;AAAEM,gBAAAA,KAAK,EAALA;AAAF,eAAhB,CADG;AAErBI,cAAAA,SAAS,CAACC,IAAV;AACAN,cAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEC,gBAAAA,OAAO,EAAE,IAAX;AAAiBC,gBAAAA,OAAO;AAAxB,eAAT;AACH;;AARe;AAAA;;AAAA;AAAA;AAAA;AAUhBT,YAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEC,cAAAA,OAAO,EAAE,KAAX;AAAkBC,cAAAA,OAAO;AAAzB,aAAT;;AAVgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;AAcAb,MAAM,CAACc,GAAP,CAAW,iBAAX;AAAA,4FAA8B,kBAAOX,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,YAAAA,KADoB,GACZF,GAAG,CAACY,MAAJ,CAAWV,KADC;AAAA;AAAA;AAAA,mBAGDN,WAAW,CAACQ,OAAZ,CAAoB;AAAEF,cAAAA,KAAK,EAALA;AAAF,aAApB,CAHC;;AAAA;AAGhBW,YAAAA,MAHgB;AAItBZ,YAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEC,cAAAA,OAAO,EAAE,IAAX;AAAiBC,cAAAA,OAAO,EAAEG;AAA1B,aAAT;AAJsB;AAAA;;AAAA;AAAA;AAAA;AAMtBZ,YAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEC,cAAAA,OAAO,EAAE,KAAX;AAAkBC,cAAAA,OAAO;AAAzB,aAAT;;AANsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;AAUAI,MAAM,CAACC,OAAP,GAAiB;AAAElB,EAAAA,MAAM,EAANA;AAAF,CAAjB","sourcesContent":["require('dotenv').config()\r\nconst express = require('express')\r\n\r\nconst { DeviceModal } = require('../utils/db')\r\n\r\nconst router = express.Router()\r\n\r\nrouter.post('/devices', async (req, res) => {\r\n    const token = req.body.token\r\n    try {\r\n        const deviceInDB = await DeviceModal.findOne({ token })\r\n        if (deviceInDB === null) {\r\n            const newDevice = new DeviceModal({ token })\r\n            newDevice.save()\r\n            res.json({ success: true, message: `Device added` })\r\n        }\r\n    } catch (e) {\r\n        res.json({ success: false, message: `Error on device add.` })\r\n    }\r\n})\r\n\r\nrouter.get('/devices/:token', async (req, res) => {\r\n    const token = req.params.token\r\n    try {\r\n        const device = await DeviceModal.findOne({ token })\r\n        res.json({ success: true, message: device })\r\n    } catch (e) {\r\n        res.json({ success: false, message: `Error on device fetch.` })\r\n    }\r\n})\r\n\r\nmodule.exports = { router }\r\n"],"file":"index.js"}