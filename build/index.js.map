{"version":3,"sources":["../src/index.js"],"names":["PORT","process","env","HOST","startApolloServer","app","use","express","json","limit","urlencoded","extended","parameterLimit","path","join","__dirname","router","httpServer","http","createServer","corsOptions","origin","credentials","server","ApolloServer","schema","plugins","playground","introspection","cors","start","applyMiddleware","Promise","resolve","listen","port","console","log","graphqlPath","runBot"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA,IAAMG,IAAI,GAAG,WAAb;;SACeC,iB;;;;;qGAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,YAAAA,GADV,GACgB,0BADhB;AAGIA,YAAAA,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,IAAR,CAAa;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAb,CAAR;AAEAJ,YAAAA,GAAG,CAACC,GAAJ,CACIC,oBAAQG,UAAR,CAAmB;AACfD,cAAAA,KAAK,EAAE,MADQ;AAEfE,cAAAA,QAAQ,EAAE,KAFK;AAGfC,cAAAA,cAAc,EAAE;AAHD,aAAnB,CADJ;AAOAP,YAAAA,GAAG,CAACC,GAAJ,CAAQ,yBAAR;AACAD,YAAAA,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaC,8BAAeM,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAb;AAEAV,YAAAA,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaU,WAAb;AAEMC,YAAAA,UAjBV,GAiBuBC,iBAAKC,YAAL,CAAkBd,GAAlB,CAjBvB;AAkBUe,YAAAA,WAlBV,GAkBwB;AAChBC,cAAAA,MAAM,mBAAYlB,IAAZ,cAAoBH,IAApB,CADU;AAEhBsB,cAAAA,WAAW,EAAE;AAFG,aAlBxB;AAsBUC,YAAAA,MAtBV,GAsBmB,IAAIC,iCAAJ,CAAiB;AAC5BC,cAAAA,MAAM,EAAE,2BADoB;AAE5BC,cAAAA,OAAO,EAAE,CAAC,yDAAkC;AAAET,gBAAAA,UAAU,EAAVA;AAAF,eAAlC,CAAD,CAFmB;AAG5BU,cAAAA,UAAU,EAAE,IAHgB;AAI5BC,cAAAA,aAAa,EAAE,IAJa;AAK5BC,cAAAA,IAAI,EAAET;AALsB,aAAjB,CAtBnB;AAAA;AAAA,mBA8BUG,MAAM,CAACO,KAAP,EA9BV;;AAAA;AA+BIP,YAAAA,MAAM,CAACQ,eAAP,CAAuB;AACnB1B,cAAAA,GAAG,EAAHA,GADmB;AAEnBQ,cAAAA,IAAI,EAAE;AAFa,aAAvB,EA/BJ,CAoCI;;AApCJ;AAAA,mBAqCU,IAAImB,OAAJ,CAAY,UAACC,OAAD;AAAA,qBAAahB,UAAU,CAACiB,MAAX,CAAkB;AAAEC,gBAAAA,IAAI,EAAEnC;AAAR,eAAlB,EAAkCiC,OAAlC,CAAb;AAAA,aAAZ,CArCV;;AAAA;AAsCIG,YAAAA,OAAO,CAACC,GAAR,yDAC2CrC,IAD3C,SACkDuB,MAAM,CAACe,WADzD;AAtCJ;AAAA,mBA0CU,kBA1CV;;AAAA;AAAA;AAAA,mBA2CUC,MAAM,EA3ChB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA8CA,IAAMA,MAAM;AAAA,2FAAG;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJ,CADI;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAED,uBAFC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANA,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAMAnC,iBAAiB","sourcesContent":["import { getSchema } from './utils/getSchema'\r\nimport { ApolloServer } from 'apollo-server-express'\r\nimport { ApolloServerPluginDrainHttpServer } from 'apollo-server-core'\r\nimport express from 'express'\r\nimport http from 'http'\r\nimport { startTheBot } from './bot'\r\nimport { startDB } from './utils/db'\r\nimport helmet from 'helmet'\r\nimport path from 'path'\r\nimport { router } from './api'\r\n\r\nconst PORT = process.env.PORT || 8000\r\nconst HOST = 'localhost'\r\nasync function startApolloServer() {\r\n    const app = express()\r\n\r\n    app.use(express.json({ limit: '50mb' }))\r\n\r\n    app.use(\r\n        express.urlencoded({\r\n            limit: '50mb',\r\n            extended: false,\r\n            parameterLimit: 50000,\r\n        })\r\n    )\r\n    app.use(helmet())\r\n    app.use('/', express.static(path.join(__dirname, 'public')))\r\n\r\n    app.use('/', router)\r\n\r\n    const httpServer = http.createServer(app)\r\n    const corsOptions = {\r\n        origin: `http://${HOST}:${PORT}`,\r\n        credentials: true,\r\n    }\r\n    const server = new ApolloServer({\r\n        schema: getSchema(),\r\n        plugins: [ApolloServerPluginDrainHttpServer({ httpServer })],\r\n        playground: true,\r\n        introspection: true,\r\n        cors: corsOptions,\r\n    })\r\n\r\n    await server.start()\r\n    server.applyMiddleware({\r\n        app,\r\n        path: '/graphql',\r\n    })\r\n\r\n    // Modified server startup\r\n    await new Promise((resolve) => httpServer.listen({ port: PORT }, resolve))\r\n    console.log(\r\n        `ðŸš€ Server ready at http://localhost:${PORT}${server.graphqlPath}`\r\n    )\r\n\r\n    await startDB()\r\n    await runBot()\r\n}\r\n\r\nconst runBot = async () => {\r\n    while (1) {\r\n        await startTheBot()\r\n    }\r\n}\r\n\r\nstartApolloServer()\r\n"],"file":"index.js"}