"use strict";

var _sdk = require("@pancakeswap/sdk");

var _ethers = require("ethers");

require('dotenv').config();

var tokenABI = [{
  constant: true,
  inputs: [],
  name: "name",
  outputs: [{
    name: "",
    type: "string"
  }],
  payable: false,
  stateMutability: "view",
  type: "function"
}, {
  constant: false,
  inputs: [{
    name: "_spender",
    type: "address"
  }, {
    name: "_value",
    type: "uint256"
  }],
  name: "approve",
  outputs: [{
    name: "",
    type: "bool"
  }],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}, {
  constant: true,
  inputs: [],
  name: "totalSupply",
  outputs: [{
    name: "",
    type: "uint256"
  }],
  payable: false,
  stateMutability: "view",
  type: "function"
}, {
  constant: false,
  inputs: [{
    name: "_from",
    type: "address"
  }, {
    name: "_to",
    type: "address"
  }, {
    name: "_value",
    type: "uint256"
  }],
  name: "transferFrom",
  outputs: [{
    name: "",
    type: "bool"
  }],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}, {
  constant: true,
  inputs: [],
  name: "decimals",
  outputs: [{
    name: "",
    type: "uint8"
  }],
  payable: false,
  stateMutability: "view",
  type: "function"
}, {
  constant: true,
  inputs: [{
    name: "_owner",
    type: "address"
  }],
  name: "balanceOf",
  outputs: [{
    name: "balance",
    type: "uint256"
  }],
  payable: false,
  stateMutability: "view",
  type: "function"
}, {
  constant: true,
  inputs: [],
  name: "symbol",
  outputs: [{
    name: "",
    type: "string"
  }],
  payable: false,
  stateMutability: "view",
  type: "function"
}, {
  constant: false,
  inputs: [{
    name: "_to",
    type: "address"
  }, {
    name: "_value",
    type: "uint256"
  }],
  name: "transfer",
  outputs: [{
    name: "",
    type: "bool"
  }],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}, {
  constant: true,
  inputs: [{
    name: "_owner",
    type: "address"
  }, {
    name: "_spender",
    type: "address"
  }],
  name: "allowance",
  outputs: [{
    name: "",
    type: "uint256"
  }],
  payable: false,
  stateMutability: "view",
  type: "function"
}, {
  payable: true,
  stateMutability: "payable",
  type: "fallback"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    name: "owner",
    type: "address"
  }, {
    indexed: true,
    name: "spender",
    type: "address"
  }, {
    indexed: false,
    name: "value",
    type: "uint256"
  }],
  name: "Approval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    name: "from",
    type: "address"
  }, {
    indexed: true,
    name: "to",
    type: "address"
  }, {
    indexed: false,
    name: "value",
    type: "uint256"
  }],
  name: "Transfer",
  type: "event"
}];
var swapABI = [{
  inputs: [{
    internalType: "address",
    name: "_factory",
    type: "address"
  }, {
    internalType: "address",
    name: "_WETH",
    type: "address"
  }],
  stateMutability: "nonpayable",
  type: "constructor"
}, {
  inputs: [],
  name: "WETH",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "tokenA",
    type: "address"
  }, {
    internalType: "address",
    name: "tokenB",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amountADesired",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountBDesired",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountAMin",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountBMin",
    type: "uint256"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }],
  name: "addLiquidity",
  outputs: [{
    internalType: "uint256",
    name: "amountA",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountB",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "liquidity",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "token",
    type: "address"
  }, {
    internalType: "uint256",
    name: "amountTokenDesired",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountTokenMin",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountETHMin",
    type: "uint256"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }],
  name: "addLiquidityETH",
  outputs: [{
    internalType: "uint256",
    name: "amountToken",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountETH",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "liquidity",
    type: "uint256"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [],
  name: "factory",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amountOut",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "reserveIn",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "reserveOut",
    type: "uint256"
  }],
  name: "getAmountIn",
  outputs: [{
    internalType: "uint256",
    name: "amountIn",
    type: "uint256"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amountIn",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "reserveIn",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "reserveOut",
    type: "uint256"
  }],
  name: "getAmountOut",
  outputs: [{
    internalType: "uint256",
    name: "amountOut",
    type: "uint256"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amountOut",
    type: "uint256"
  }, {
    internalType: "address[]",
    name: "path",
    type: "address[]"
  }],
  name: "getAmountsIn",
  outputs: [{
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amountIn",
    type: "uint256"
  }, {
    internalType: "address[]",
    name: "path",
    type: "address[]"
  }],
  name: "getAmountsOut",
  outputs: [{
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }],
  stateMutability: "view",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amountA",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "reserveA",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "reserveB",
    type: "uint256"
  }],
  name: "quote",
  outputs: [{
    internalType: "uint256",
    name: "amountB",
    type: "uint256"
  }],
  stateMutability: "pure",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "tokenA",
    type: "address"
  }, {
    internalType: "address",
    name: "tokenB",
    type: "address"
  }, {
    internalType: "uint256",
    name: "liquidity",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountAMin",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountBMin",
    type: "uint256"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }],
  name: "removeLiquidity",
  outputs: [{
    internalType: "uint256",
    name: "amountA",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountB",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "token",
    type: "address"
  }, {
    internalType: "uint256",
    name: "liquidity",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountTokenMin",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountETHMin",
    type: "uint256"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }],
  name: "removeLiquidityETH",
  outputs: [{
    internalType: "uint256",
    name: "amountToken",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountETH",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "token",
    type: "address"
  }, {
    internalType: "uint256",
    name: "liquidity",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountTokenMin",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountETHMin",
    type: "uint256"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }],
  name: "removeLiquidityETHSupportingFeeOnTransferTokens",
  outputs: [{
    internalType: "uint256",
    name: "amountETH",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "token",
    type: "address"
  }, {
    internalType: "uint256",
    name: "liquidity",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountTokenMin",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountETHMin",
    type: "uint256"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }, {
    internalType: "bool",
    name: "approveMax",
    type: "bool"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "removeLiquidityETHWithPermit",
  outputs: [{
    internalType: "uint256",
    name: "amountToken",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountETH",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "token",
    type: "address"
  }, {
    internalType: "uint256",
    name: "liquidity",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountTokenMin",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountETHMin",
    type: "uint256"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }, {
    internalType: "bool",
    name: "approveMax",
    type: "bool"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
  outputs: [{
    internalType: "uint256",
    name: "amountETH",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "address",
    name: "tokenA",
    type: "address"
  }, {
    internalType: "address",
    name: "tokenB",
    type: "address"
  }, {
    internalType: "uint256",
    name: "liquidity",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountAMin",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountBMin",
    type: "uint256"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }, {
    internalType: "bool",
    name: "approveMax",
    type: "bool"
  }, {
    internalType: "uint8",
    name: "v",
    type: "uint8"
  }, {
    internalType: "bytes32",
    name: "r",
    type: "bytes32"
  }, {
    internalType: "bytes32",
    name: "s",
    type: "bytes32"
  }],
  name: "removeLiquidityWithPermit",
  outputs: [{
    internalType: "uint256",
    name: "amountA",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountB",
    type: "uint256"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amountOut",
    type: "uint256"
  }, {
    internalType: "address[]",
    name: "path",
    type: "address[]"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }],
  name: "swapETHForExactTokens",
  outputs: [{
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amountOutMin",
    type: "uint256"
  }, {
    internalType: "address[]",
    name: "path",
    type: "address[]"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }],
  name: "swapExactETHForTokens",
  outputs: [{
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amountOutMin",
    type: "uint256"
  }, {
    internalType: "address[]",
    name: "path",
    type: "address[]"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }],
  name: "swapExactETHForTokensSupportingFeeOnTransferTokens",
  outputs: [],
  stateMutability: "payable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amountIn",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountOutMin",
    type: "uint256"
  }, {
    internalType: "address[]",
    name: "path",
    type: "address[]"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }],
  name: "swapExactTokensForETH",
  outputs: [{
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amountIn",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountOutMin",
    type: "uint256"
  }, {
    internalType: "address[]",
    name: "path",
    type: "address[]"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }],
  name: "swapExactTokensForETHSupportingFeeOnTransferTokens",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amountIn",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountOutMin",
    type: "uint256"
  }, {
    internalType: "address[]",
    name: "path",
    type: "address[]"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }],
  name: "swapExactTokensForTokens",
  outputs: [{
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amountIn",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountOutMin",
    type: "uint256"
  }, {
    internalType: "address[]",
    name: "path",
    type: "address[]"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }],
  name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
  outputs: [],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amountOut",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountInMax",
    type: "uint256"
  }, {
    internalType: "address[]",
    name: "path",
    type: "address[]"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }],
  name: "swapTokensForExactETH",
  outputs: [{
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  inputs: [{
    internalType: "uint256",
    name: "amountOut",
    type: "uint256"
  }, {
    internalType: "uint256",
    name: "amountInMax",
    type: "uint256"
  }, {
    internalType: "address[]",
    name: "path",
    type: "address[]"
  }, {
    internalType: "address",
    name: "to",
    type: "address"
  }, {
    internalType: "uint256",
    name: "deadline",
    type: "uint256"
  }],
  name: "swapTokensForExactTokens",
  outputs: [{
    internalType: "uint256[]",
    name: "amounts",
    type: "uint256[]"
  }],
  stateMutability: "nonpayable",
  type: "function"
}, {
  stateMutability: "payable",
  type: "receive"
}]; // BINANCE SMART CHAIN

var provider = new _ethers.ethers.providers.JsonRpcProvider('https://bsc-dataseed.binance.org/', {
  name: 'Smart Chain',
  chainId: 56
});
var pancakeSwapContractAddress = '0x10ED43C718714eb63d5aA57B78B54704E256024E'; // ROPSTEN NETWORK
// const provider = ethers.getDefaultProvider(
//   "ropsten",
//   "GHG4E1DKJUKICUYJWQSYRM3385MDYRRDP1"
// );
// const pancakeSwapContractAddress = "0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506";

var wallet = new _ethers.ethers.Wallet(process.env.PRIVATE_KEY, provider);
var pancakeSwapContract = new _ethers.ethers.Contract(pancakeSwapContractAddress, swapABI, wallet);
var chainID = _sdk.ChainId.MAINNET;
var slippage = 2;
var maxAllowance = '1000000000000000000000000';
var gasLimit = 300000;
var GWEI = 1000 * 1000 * 1000;
var BUSD = new _sdk.Token(chainID, '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56', 18, 'BUSD', 'BUSD');
module.exports = {
  provider: provider,
  wallet: wallet,
  pancakeSwapContract: pancakeSwapContract,
  pancakeSwapContractAddress: pancakeSwapContractAddress,
  chainID: chainID,
  maxAllowance: maxAllowance,
  gasLimit: gasLimit,
  slippage: slippage,
  GWEI: GWEI,
  BUSD: BUSD
};
//# sourceMappingURL=wallet.js.map