{"version":3,"sources":["../../src/utils/getSchema.js"],"names":["getSchema","typesArray","path","join","__dirname","recursive","resolversArray","typeDefs","resolvers","executableSchema"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;AAEO,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC3B,MAAMC,UAAU,GAAG,8BACfC,IAAI,CAACC,IAAL,CAAUC,SAAV,EAAqB,yBAArB,CADe,EAEf;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAFe,CAAnB;AAIA,MAAMC,cAAc,GAAG,8BACnBJ,IAAI,CAACC,IAAL,CAAUC,SAAV,EAAqB,4BAArB,CADmB,EAEnB;AACIC,IAAAA,SAAS,EAAE;AADf,GAFmB,CAAvB;AAOA,MAAME,QAAQ,GAAG,0BAAcN,UAAd,CAAjB;AACA,MAAMO,SAAS,GAAG,2BAAeF,cAAf,CAAlB;AAEA,MAAMG,gBAAgB,GAAG,kCAAqB;AAC1CF,IAAAA,QAAQ,EAARA,QAD0C;AAE1CC,IAAAA,SAAS,EAATA;AAF0C,GAArB,CAAzB;AAKA,SAAOC,gBAAP;AACH,CArBM","sourcesContent":["import { makeExecutableSchema } from '@graphql-tools/schema'\r\nimport { mergeTypeDefs, mergeResolvers } from '@graphql-tools/merge'\r\nimport { loadFilesSync } from '@graphql-tools/load-files'\r\n\r\nimport * as path from 'path'\r\n\r\nexport const getSchema = () => {\r\n    const typesArray = loadFilesSync(\r\n        path.join(__dirname, '../graphql/**/*.graphql'),\r\n        { recursive: true }\r\n    )\r\n    const resolversArray = loadFilesSync(\r\n        path.join(__dirname, '../graphql/**/*.resolver.*'),\r\n        {\r\n            recursive: true,\r\n        }\r\n    )\r\n\r\n    const typeDefs = mergeTypeDefs(typesArray)\r\n    const resolvers = mergeResolvers(resolversArray)\r\n\r\n    const executableSchema = makeExecutableSchema({\r\n        typeDefs,\r\n        resolvers,\r\n    })\r\n\r\n    return executableSchema\r\n}\r\n"],"file":"getSchema.js"}