{"version":3,"sources":["../../src/utils/notification.js"],"names":["require","config","sender","gcm","Sender","process","env","FB_KEY","sendMessage","title","body","message","Message","notification","icon","DeviceModal","find","devices","registeredDevices","device","push","token","send","registrationTokens","err","response","console","error","log","module","exports"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,G,CACA;;;AACA,IAAMC,MAAM,GAAG,IAAIC,oBAAIC,MAAR,CAAeC,OAAO,CAACC,GAAR,CAAYC,MAA3B,CAAf;;AAEA,IAAMC,WAAW;AAAA,2FAAG,iBAAOC,KAAP,EAAcC,IAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,OADU,GACA,IAAIR,oBAAIS,OAAR,CAAgB;AAC5BC,cAAAA,YAAY,EAAE;AACVJ,gBAAAA,KAAK,EAAEA,KADG;AAEVK,gBAAAA,IAAI,EAAE,aAFI;AAGVJ,gBAAAA,IAAI,EAAEA;AAHI;AADc,aAAhB,CADA;AAAA;AAAA,mBASMK,gBAAYC,IAAZ,EATN;;AAAA;AASVC,YAAAA,OATU;AAUVC,YAAAA,iBAVU,GAUU,EAVV;AAAA,mDAYGD,OAZH;;AAAA;AAYhB,kEAA4B;AAAnBE,gBAAAA,MAAmB;AACxBD,gBAAAA,iBAAiB,CAACE,IAAlB,CAAuBD,MAAM,CAACE,KAA9B;AACH,eAde,CAehB;;AAfgB;AAAA;AAAA;AAAA;AAAA;;AAgBhBnB,YAAAA,MAAM,CAACoB,IAAP,CACIX,OADJ,EAEI;AAAEY,cAAAA,kBAAkB,EAAEL;AAAtB,aAFJ,EAGI,UAAUM,GAAV,EAAeC,QAAf,EAAyB;AACrB,kBAAID,GAAJ,EAASE,OAAO,CAACC,KAAR,CAAcH,GAAd,EAAT,KACKE,OAAO,CAACE,GAAR,CAAY,oBAAZ;AACR,aANL;;AAhBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXpB,WAAW;AAAA;AAAA;AAAA,GAAjB;;AA0BAqB,MAAM,CAACC,OAAP,GAAiB;AAAEtB,EAAAA,WAAW,EAAXA;AAAF,CAAjB","sourcesContent":["import gcm from 'node-gcm'\r\nimport { DeviceModal } from './db'\r\nrequire('dotenv').config()\r\n// Set up the sender with your GCM/FCM API key (declare this once for multiple messages)\r\nconst sender = new gcm.Sender(process.env.FB_KEY)\r\n\r\nconst sendMessage = async (title, body) => {\r\n    const message = new gcm.Message({\r\n        notification: {\r\n            title: title,\r\n            icon: 'ic_launcher',\r\n            body: body,\r\n        },\r\n    })\r\n\r\n    const devices = await DeviceModal.find()\r\n    const registeredDevices = []\r\n\r\n    for (let device of devices) {\r\n        registeredDevices.push(device.token)\r\n    }\r\n    // Send the message\r\n    sender.send(\r\n        message,\r\n        { registrationTokens: registeredDevices },\r\n        function (err, response) {\r\n            if (err) console.error(err)\r\n            else console.log('Notification sent.')\r\n        }\r\n    )\r\n}\r\n\r\nmodule.exports = { sendMessage }\r\n"],"file":"notification.js"}