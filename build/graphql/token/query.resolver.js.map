{"version":3,"sources":["../../../src/graphql/token/query.resolver.js"],"names":["Query","getTokens","_","args","ctx","info","TokenModal","find","sort","updatedAt","tokens","Promise","all","map","token","balance","price","bnbBalance","bnbPrice","busdBalance","name","address","result","error"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;eAEe;AACXA,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS;AAAA,qGAAE,kBAAOC,CAAP,EAAUC,IAAV,EAAgBC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,gBAAAA,IADD,GACUF,IADV,CACCE,IADD;AAAA;AAAA;AAAA,uBAGkBC,eAAWC,IAAX,GAAkBC,IAAlB,CAAuB;AAAEC,kBAAAA,SAAS,EAAE,CAAC;AAAd,iBAAvB,CAHlB;;AAAA;AAGGC,gBAAAA,MAHH;;AAAA,sBAICL,IAAI,KAAK,CAJV;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAKOM,OAAO,CAACC,GAAR,CACFF,MAAM,CAACG,GAAP;AAAA,2GAAW,iBAAOC,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAOG,sCAAwBA,KAAxB,CAPH;;AAAA;AAAA;AAEHC,4BAAAA,OAFG,yBAEHA,OAFG;AAGHC,4BAAAA,KAHG,yBAGHA,KAHG;AAIHC,4BAAAA,UAJG,yBAIHA,UAJG;AAKHC,4BAAAA,QALG,yBAKHA,QALG;AAMHC,4BAAAA,WANG,yBAMHA,WANG;AASDd,4BAAAA,IATC,GASM;AACTS,8BAAAA,KAAK,EAAEA,KAAK,CAACM,IADJ;AAETC,8BAAAA,OAAO,EAAEP,KAAK,CAACO,OAFN;AAGTN,8BAAAA,OAAO,EAAPA,OAHS;AAITE,8BAAAA,UAAU,EAAVA,UAJS;AAKTE,8BAAAA,WAAW,EAAXA,WALS;AAMTH,8BAAAA,KAAK,EAALA,KANS;AAOTE,8BAAAA,QAAQ,EAARA;AAPS,6BATN;AAkBPJ,4BAAAA,KAAK,CAACT,IAAN,GAAaA,IAAb;AAlBO,6DAmBAS,KAnBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAX;;AAAA;AAAA;AAAA;AAAA,oBADE,CALP;;AAAA;AAAA,kDA6BI;AAAEQ,kBAAAA,MAAM,EAAEZ;AAAV,iBA7BJ;;AAAA;AAAA;AAAA;AAAA,kDA+BI;AAAEa,kBAAAA,KAAK;AAAP,iBA/BJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADN;AADI,C","sourcesContent":["import { TokenModal } from '../../utils/db'\r\nimport { getTokenPriceAndBalance } from '../../utils/helpers'\r\n\r\nexport default {\r\n    Query: {\r\n        getTokens: async (_, args, ctx) => {\r\n            const { info } = args\r\n            try {\r\n                const tokens = await TokenModal.find().sort({ updatedAt: -1 })\r\n                if (info === 1) {\r\n                    await Promise.all(\r\n                        tokens.map(async (token) => {\r\n                            const {\r\n                                balance,\r\n                                price,\r\n                                bnbBalance,\r\n                                bnbPrice,\r\n                                busdBalance,\r\n                            } = await getTokenPriceAndBalance(token)\r\n\r\n                            const info = {\r\n                                token: token.name,\r\n                                address: token.address,\r\n                                balance,\r\n                                bnbBalance,\r\n                                busdBalance,\r\n                                price,\r\n                                bnbPrice,\r\n                            }\r\n                            token.info = info\r\n                            return token\r\n                        })\r\n                    )\r\n                }\r\n                return { result: tokens }\r\n            } catch (e) {\r\n                return { error: `No tokens found.` }\r\n            }\r\n        },\r\n    },\r\n}\r\n"],"file":"query.resolver.js"}